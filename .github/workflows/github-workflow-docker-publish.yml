# This is a basic workflow to help you get started with Actions

name: 持续集成CI

# Controls when the action will run.
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      what_to_do:
        type: choice
        description: Choose what to do
        options: 
        - build_and_push_image
        - create_image_snapshot
      target_docker_image:
        required: true
      # upload-artifact:
      #   type: boolean
      # environment:
      #   type: environment

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Job-Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: 显示基本信息 Output basic info
      run: |
        echo "当前Build ID: $GITHUB_RUN_ID"
        echo "当前Build Number: $GITHUB_RUN_NUMBER"
        echo "当前目录为: $GITHUB_WORKSPACE"

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: 代码获取 Checkout code
      uses: actions/checkout@v2

    # Runs a set of commands using the runners shell
    - name: 运行执行脚本 Run a multi-line script - create_image_snapshot
      if: ${{ github.event.inputs.what_to_do == 'create_image_snapshot' }}
      run: |
        export ENV_CI_DOCKERIMAGE_THISTAG="$GITHUB_RUN_NUMBER"
        docker pull "${{ github.event.inputs.target_docker_image }}"
        docker save "${{ github.event.inputs.target_docker_image }}" | gzip > docker-image-saved.tar.gz
        echo "[($date)]: ${{ github.event.inputs.target_docker_image }}" > docker-image-saved.txt
      env:
        ENV_CI_DOCKERIMAGE_FROM: ${{ github.event.inputs.target_docker_image }}

    # Runs a set of commands using the runners shell
    - name: 运行执行脚本 Run a multi-line script - build_and_push_image
      if: ${{ github.event.inputs.what_to_do == 'build_and_push_image' }}
      run: |
        export ENV_CI_DOCKERIMAGE_THISTAG="$GITHUB_RUN_NUMBER"
        ./run-docker-build-publish.sh
      env:
        ENV_CI_DOCKER_USERNAME: ${{ github.actor }}
        ENV_CI_DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        ENV_CI_DOCKERIMAGE_FEATURENAME: ${{ github.event.inputs.target_docker_image }}
        ENV_CI_DOCKERIMAGE_REPOURL: ""
        ENV_CI_DOCKERIMAGE_REPOYML: ""

    # Upload artifacts
    - name: 上传产出包 Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: ${{ github.workspace }}
